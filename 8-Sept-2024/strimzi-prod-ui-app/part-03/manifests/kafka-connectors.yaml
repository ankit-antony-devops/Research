# https://strimzi.io/docs/operators/0.27.1/deploying#proc-deploying-kafkaconnector-str
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: order-source
  labels:
    strimzi.io/cluster: demo-connect
spec:
  class: com.amazonaws.mskdatagen.GeneratorSourceConnector
  tasksMax: 1
  config:
    ##
    key.converter: org.apache.kafka.connect.storage.StringConverter
    key.converter.schemas.enable: false
    value.converter: org.apache.kafka.connect.json.JsonConverter
    value.converter.schemas.enable: false
    ##
    genkp.customer.with: "#{Code.isbn10}"
    genv.customer.name.with: "#{Name.full_name}"
    genkp.order.with: "#{Internet.uuid}"
    genv.order.product_id.with: "#{number.number_between '101''109'}"
    genv.order.quantity.with: "#{number.number_between '1''5'}"
    genv.order.customer_id.matching: customer.key
    global.throttle.ms: 500
    global.history.records.max: 1000
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: order-sink
  labels:
    strimzi.io/cluster: demo-connect
spec:
  class: io.confluent.connect.s3.S3SinkConnector
  tasksMax: 1
  config:
    ##
    key.converter: org.apache.kafka.connect.storage.StringConverter
    key.converter.schemas.enable: false
    value.converter: org.apache.kafka.connect.json.JsonConverter
    value.converter.schemas.enable: false
    ##
    storage.class: io.confluent.connect.s3.storage.S3Storage
    format.class: io.confluent.connect.s3.format.json.JsonFormat
    topics: order,customer
    s3.bucket.name: kafka-dev-on-k8s-ap-southeast-2
    s3.region: ap-southeast-2
    flush.size: 100
    rotate.schedule.interval.ms: 60000
    timezone: Australia/Sydney
    partitioner.class: io.confluent.connect.storage.partitioner.DefaultPartitioner
    errors.log.enable: true
